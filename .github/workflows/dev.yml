# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Okteto Login
        uses: okteto/login@master
        with:
          # Your okteto API token
          token: ${{ secrets.OKTETO_TOKEN }}

      - uses: okteto/namespace@master
        with:
          name: prog-acad-froescayo

      - name: Login
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Okteto Build
        uses: okteto/build@master
        with:
          token: ${{ secrets.OKTETO_TOKEN }}
          tag: ${{ secrets.DOCKER_USERNAME }}/prog-acad-api:${{ github.sha }}

  # deploy:
  #   runs-on: ubuntu-latest

  #   steps:

  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2

  #     env:
  #       DB_DATABASE: ${{ secrets.DB_DATABASE }}
  #       DB_HOST: ${{ secrets.DB_HOST }}
  #       DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  #       DB_USERNAME: ${{ secrets.DB_USERNAME }}
  #       JWT_SECRET: ${{ secrets.JWT_SECRET }}

  #     - name: "Trigger the pipeline"
  #       uses: okteto/pipeline@master
  #       with:
  #         name: pr-${{ github.event.number }}
  #         timeout: 8m
  #         skipIfExists: true
  #         variables: "DB_HOST=mysql,CONFIG_PATH=/tmp/config.yaml"